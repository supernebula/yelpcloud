<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.evol.mapper.BusinessMapper">
  <resultMap id="BaseResultMap" type="com.evol.domain.model.Business">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="neighborhood" jdbcType="VARCHAR" property="neighborhood" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="city" jdbcType="VARCHAR" property="city" />
    <result column="state" jdbcType="VARCHAR" property="state" />
    <result column="postal_code" jdbcType="VARCHAR" property="postalCode" />
    <result column="latitude" jdbcType="REAL" property="latitude" />
    <result column="longitude" jdbcType="REAL" property="longitude" />
    <result column="stars" jdbcType="REAL" property="stars" />
    <result column="review_count" jdbcType="INTEGER" property="reviewCount" />
    <result column="is_open" jdbcType="TINYINT" property="isOpen" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, neighborhood, address, city, state, postal_code, latitude, longitude, stars, 
    review_count, is_open
  </sql>
  <select id="selectByExample" parameterType="com.evol.domain.model.BusinessExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from business
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from business
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from business
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.evol.domain.model.BusinessExample">
    delete from business
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.evol.domain.model.Business">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.String">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into business (name, neighborhood, address, 
      city, state, postal_code, 
      latitude, longitude, stars, 
      review_count, is_open)
    values (#{name,jdbcType=VARCHAR}, #{neighborhood,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{city,jdbcType=VARCHAR}, #{state,jdbcType=VARCHAR}, #{postalCode,jdbcType=VARCHAR}, 
      #{latitude,jdbcType=REAL}, #{longitude,jdbcType=REAL}, #{stars,jdbcType=REAL}, 
      #{reviewCount,jdbcType=INTEGER}, #{isOpen,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.evol.domain.model.Business">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.String">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into business
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        name,
      </if>
      <if test="neighborhood != null">
        neighborhood,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="city != null">
        city,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="postalCode != null">
        postal_code,
      </if>
      <if test="latitude != null">
        latitude,
      </if>
      <if test="longitude != null">
        longitude,
      </if>
      <if test="stars != null">
        stars,
      </if>
      <if test="reviewCount != null">
        review_count,
      </if>
      <if test="isOpen != null">
        is_open,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="neighborhood != null">
        #{neighborhood,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="postalCode != null">
        #{postalCode,jdbcType=VARCHAR},
      </if>
      <if test="latitude != null">
        #{latitude,jdbcType=REAL},
      </if>
      <if test="longitude != null">
        #{longitude,jdbcType=REAL},
      </if>
      <if test="stars != null">
        #{stars,jdbcType=REAL},
      </if>
      <if test="reviewCount != null">
        #{reviewCount,jdbcType=INTEGER},
      </if>
      <if test="isOpen != null">
        #{isOpen,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.evol.domain.model.BusinessExample" resultType="java.lang.Long">
    select count(*) from business
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update business
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.neighborhood != null">
        neighborhood = #{record.neighborhood,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.city != null">
        city = #{record.city,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=VARCHAR},
      </if>
      <if test="record.postalCode != null">
        postal_code = #{record.postalCode,jdbcType=VARCHAR},
      </if>
      <if test="record.latitude != null">
        latitude = #{record.latitude,jdbcType=REAL},
      </if>
      <if test="record.longitude != null">
        longitude = #{record.longitude,jdbcType=REAL},
      </if>
      <if test="record.stars != null">
        stars = #{record.stars,jdbcType=REAL},
      </if>
      <if test="record.reviewCount != null">
        review_count = #{record.reviewCount,jdbcType=INTEGER},
      </if>
      <if test="record.isOpen != null">
        is_open = #{record.isOpen,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update business
    set id = #{record.id,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      neighborhood = #{record.neighborhood,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      city = #{record.city,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=VARCHAR},
      postal_code = #{record.postalCode,jdbcType=VARCHAR},
      latitude = #{record.latitude,jdbcType=REAL},
      longitude = #{record.longitude,jdbcType=REAL},
      stars = #{record.stars,jdbcType=REAL},
      review_count = #{record.reviewCount,jdbcType=INTEGER},
      is_open = #{record.isOpen,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.evol.domain.model.Business">
    update business
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="neighborhood != null">
        neighborhood = #{neighborhood,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=VARCHAR},
      </if>
      <if test="postalCode != null">
        postal_code = #{postalCode,jdbcType=VARCHAR},
      </if>
      <if test="latitude != null">
        latitude = #{latitude,jdbcType=REAL},
      </if>
      <if test="longitude != null">
        longitude = #{longitude,jdbcType=REAL},
      </if>
      <if test="stars != null">
        stars = #{stars,jdbcType=REAL},
      </if>
      <if test="reviewCount != null">
        review_count = #{reviewCount,jdbcType=INTEGER},
      </if>
      <if test="isOpen != null">
        is_open = #{isOpen,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.evol.domain.model.Business">
    update business
    set name = #{name,jdbcType=VARCHAR},
      neighborhood = #{neighborhood,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      city = #{city,jdbcType=VARCHAR},
      state = #{state,jdbcType=VARCHAR},
      postal_code = #{postalCode,jdbcType=VARCHAR},
      latitude = #{latitude,jdbcType=REAL},
      longitude = #{longitude,jdbcType=REAL},
      stars = #{stars,jdbcType=REAL},
      review_count = #{reviewCount,jdbcType=INTEGER},
      is_open = #{isOpen,jdbcType=TINYINT}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>